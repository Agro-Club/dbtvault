{{config(materialized='incremental', schema='TEST_VLT', enabled=true, tags='feature')}}

SELECT
                CAST(CUSTOMER_NATION_PK AS BINARY(16)) AS CUSTOMER_NATION_PK,
                CAST(CUSTOMER_PK AS BINARY(16)) AS CUSTOMER_PK,
                CAST(NATION_PK AS BINARY(16)) AS NATION_PK,
                CAST(LOADDATE AS DATE) AS LOADDATE,
                CAST(SOURCE AS VARCHAR(4)) AS SOURCE
 FROM (
    SELECT DISTINCT CUSTOMER_NATION_PK, CUSTOMER_PK, NATION_PK, LOADDATE, SOURCE,
           LAG(SOURCE, 1)
           OVER(PARTITION by CUSTOMER_NATION_PK
           ORDER BY CUSTOMER_NATION_PK) AS FIRST_SOURCE
    FROM (
        SELECT DISTINCT a.CUSTOMER_NATION_PK, a.CUSTOMER_PK, a.NATION_PK, a.LOADDATE, a.SOURCE
        FROM DV_PROTOTYPE_DB.SRC_TEST_STG.STG_CUSTOMER AS a
        LEFT JOIN DV_PROTOTYPE_DB.SRC_TEST_VLT.test_link_customer_nation AS c
        ON a.CUSTOMER_NATION_PK = c.CUSTOMER_NATION_PK
        AND c.CUSTOMER_NATION_PK IS NULL
        )
 AS b)
AS stg
{% if is_incremental() -%}
WHERE stg.CUSTOMER_NATION_PK NOT IN (SELECT CUSTOMER_NATION_PK FROM {{ this }})
AND FIRST_SOURCE IS NULL
{%- endif -%}