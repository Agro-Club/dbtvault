{#- Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-#}

{%- macro link_template(src_pk, src_fk, src_ldts, src_source,
                        tgt_pk, tgt_fk, tgt_ldts, tgt_source,
                        source) -%}

{%- if execute -%}
    {%- do exceptions.warn("Warning: This macro (link_template) is deprecated and will be removed in a future release. Use link instead.") -%}
{%- endif -%}

{%- set tgt_cols = dbtvault.create_tgt_cols(src_pk=src_pk, src_fk=src_fk, src_ldts=src_ldts, src_source=src_source,
                                            tgt_pk=tgt_pk, tgt_fk=tgt_fk, tgt_ldts=tgt_ldts, tgt_source=tgt_source,
                                            source=source) -%}

{%- set tgt_pk = tgt_cols['tgt_pk'] -%}
{%- set tgt_fk = tgt_cols['tgt_fk'] -%}
{%- set tgt_ldts = tgt_cols['tgt_ldts'] -%}
{%- set tgt_source = tgt_cols['tgt_source'] -%}

{%- set is_union = dbtvault.is_union(source) -%}
-- Generated by dbtvault.
SELECT DISTINCT {{ dbtvault.cast([tgt_pk, tgt_fk, tgt_ldts, tgt_source], 'stg') }}
FROM (
    {{ dbtvault.create_source(src_pk, src_fk, src_ldts, src_source,
                              tgt_pk, tgt_fk, tgt_ldts, tgt_source,
                              source, is_union) }}
) AS stg
{# If incremental union or single #}
{%- if is_incremental() -%}
LEFT JOIN {{ this }} AS tgt
ON {{ dbtvault.prefix([tgt_pk|first], 'stg') }} = {{ dbtvault.prefix([tgt_pk|last], 'tgt') }}
WHERE {{ dbtvault.prefix([tgt_pk|last], 'tgt') }} IS NULL
{# If an incremental and union load -#}
{% if is_union -%}
AND stg.FIRST_SOURCE IS NULL
{%- endif -%}
{%- endif -%}
{# If a union base-load #}
{%- if is_union and not is_incremental() -%}
WHERE stg.FIRST_SOURCE IS NULL
{%- endif -%}
{%- endmacro -%}