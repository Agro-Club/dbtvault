{%- macro stage(include_source_columns=none, source_model=none, hashed_columns=none, derived_columns=none) -%}

    {% if include_source_columns is none %}
        {%- set include_source_columns = true -%}
    {% endif %}

    {{- adapter.dispatch('stage', packages = ['dbtvault'])(include_source_columns=include_source_columns, source_model=source_model, hashed_columns=hashed_columns, derived_columns=derived_columns) -}}
{%- endmacro -%}

{%- macro snowflake__stage(include_source_columns, source_model, hashed_columns, derived_columns) -%}
-- Generated by dbtvault.

{% if (source_model is none) and execute %}

    {%- set error_message -%}
    "Staging error: Missing source_model configuration. A source model name must be provided.
    e.g. 
    [REF STYLE]
    source_model: model_name
    OR
    [SOURCES STYLE]
    source_model:
    source_name: source_table_name"
    {%- endset -%}
    
    {{- exceptions.raise_compiler_error(error_message) -}}
{%- endif -%}

{% if source_model is mapping and source_model is not none -%}

    {%- set source_name = source_model | first -%}
    {%- set source_table_name = source_model[source_name] -%}

    {%- set source_relation = source(source_name, source_table_name) -%}

{%- elif source_model is not mapping and source_model is not none -%}

    {%- set source_relation = ref(source_model) -%}
{%- endif -%}
{#- If source relation is defined but derived_columns is not, add columns from source model. -#}
WITH stage AS (
    SELECT
{% if source_relation is defined  %}
    {{ dbtvault.derive_columns(source_relation=source_relation) | indent(4) }}
{% endif %}
    FROM {{ source_relation }}
),

{# Derive additional columns, if provided -#}
derived_columns AS (
    SElECT {% if hashed_columns is defined or include_source_columns is not false -%}

        *

    {%- endif -%}
    {%- if derived_columns is defined and derived_columns is not none  -%}
    ,

    {{dbtvault.derive_columns(columns=derived_columns)| indent(4)}}

    {%- endif %}

    FROM stage
),
{# Hash columns, if provided #}
hashed_columns AS (
    SELECT {% if derived_columns is defined or source_columns is not none -%}

              *

           {%- endif -%}
    {%- if hashed_columns is defined and hashed_columns is not none -%}
        {%- if derived_columns is defined or source_columns is not none -%}

            ,

        {%- endif %}

    {{ dbtvault.hash_columns(columns=hashed_columns) | indent(4) }}

    {%- endif %}

    FROM derived_columns
)

SELECT * FROM hashed_columns


{%- endmacro -%}
